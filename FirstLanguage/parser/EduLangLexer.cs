//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Lukas/Projects/FirstLanguage/FirstLanguage/grammar/EduLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class EduLangLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		KW_PUSH=1, KW_POP=2, KW_DUP=3, KW_SWAP=4, KW_LOAD=5, KW_STORE=6, KW_ADD=7, 
		KW_SUB=8, KW_MUL=9, KW_DIV=10, KW_MOD=11, KW_EQ=12, KW_NEQ=13, KW_LT=14, 
		KW_GT=15, KW_LTE=16, KW_GTE=17, KW_NOT=18, KW_AND=19, KW_OR=20, KW_LABEL=21, 
		KW_JUMP=22, KW_JUMPZ=23, KW_JUMPNZ=24, KW_INPUT=25, KW_PRINT=26, KW_PUTC=27, 
		KW_HALT=28, INTEGER_LITERAL=29, IDENTIFIER=30, COMMENT=31, WS=32, NEWLINE=33;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
		"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "KW_PUSH", 
		"KW_POP", "KW_DUP", "KW_SWAP", "KW_LOAD", "KW_STORE", "KW_ADD", "KW_SUB", 
		"KW_MUL", "KW_DIV", "KW_MOD", "KW_EQ", "KW_NEQ", "KW_LT", "KW_GT", "KW_LTE", 
		"KW_GTE", "KW_NOT", "KW_AND", "KW_OR", "KW_LABEL", "KW_JUMP", "KW_JUMPZ", 
		"KW_JUMPNZ", "KW_INPUT", "KW_PRINT", "KW_PUTC", "KW_HALT", "INTEGER_LITERAL", 
		"IDENTIFIER", "COMMENT", "WS", "NEWLINE"
	};


	public EduLangLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public EduLangLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "KW_PUSH", "KW_POP", "KW_DUP", "KW_SWAP", "KW_LOAD", "KW_STORE", 
		"KW_ADD", "KW_SUB", "KW_MUL", "KW_DIV", "KW_MOD", "KW_EQ", "KW_NEQ", "KW_LT", 
		"KW_GT", "KW_LTE", "KW_GTE", "KW_NOT", "KW_AND", "KW_OR", "KW_LABEL", 
		"KW_JUMP", "KW_JUMPZ", "KW_JUMPNZ", "KW_INPUT", "KW_PRINT", "KW_PUTC", 
		"KW_HALT", "INTEGER_LITERAL", "IDENTIFIER", "COMMENT", "WS", "NEWLINE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "EduLang.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static EduLangLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,33,336,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,
		5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,
		13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,
		20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,26,1,
		26,1,26,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,
		29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,
		32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,
		36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,
		40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,
		43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,
		47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,
		49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,51,1,51,1,51,1,51,1,
		51,1,51,1,52,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,54,3,54,300,
		8,54,1,54,4,54,303,8,54,11,54,12,54,304,1,55,1,55,5,55,309,8,55,10,55,
		12,55,312,9,55,1,56,1,56,5,56,316,8,56,10,56,12,56,319,9,56,1,56,1,56,
		1,57,4,57,324,8,57,11,57,12,57,325,1,57,1,57,1,58,1,58,3,58,332,8,58,1,
		58,3,58,335,8,58,0,0,59,1,0,3,0,5,0,7,0,9,0,11,0,13,0,15,0,17,0,19,0,21,
		0,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,0,45,0,47,0,49,
		0,51,0,53,1,55,2,57,3,59,4,61,5,63,6,65,7,67,8,69,9,71,10,73,11,75,12,
		77,13,79,14,81,15,83,16,85,17,87,18,89,19,91,20,93,21,95,22,97,23,99,24,
		101,25,103,26,105,27,107,28,109,29,111,30,113,31,115,32,117,33,1,0,31,
		2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,99,2,0,68,68,100,100,2,0,
		69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,103,2,0,72,72,104,104,2,
		0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,107,2,0,76,76,108,108,
		2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,111,2,0,80,80,112,112,
		2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,115,2,0,84,84,116,116,
		2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,119,2,0,88,88,120,120,
		2,0,89,89,121,121,2,0,90,90,122,122,1,0,48,57,3,0,65,90,95,95,97,122,4,
		0,48,57,65,90,95,95,97,122,2,0,10,10,13,13,2,0,9,9,32,32,316,0,53,1,0,
		0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,
		65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
		0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,
		0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,1,119,1,0,0,0,3,121,1,0,0,0,5,123,1,0,0,0,7,125,1,0,0,0,9,127,1,
		0,0,0,11,129,1,0,0,0,13,131,1,0,0,0,15,133,1,0,0,0,17,135,1,0,0,0,19,137,
		1,0,0,0,21,139,1,0,0,0,23,141,1,0,0,0,25,143,1,0,0,0,27,145,1,0,0,0,29,
		147,1,0,0,0,31,149,1,0,0,0,33,151,1,0,0,0,35,153,1,0,0,0,37,155,1,0,0,
		0,39,157,1,0,0,0,41,159,1,0,0,0,43,161,1,0,0,0,45,163,1,0,0,0,47,165,1,
		0,0,0,49,167,1,0,0,0,51,169,1,0,0,0,53,171,1,0,0,0,55,176,1,0,0,0,57,180,
		1,0,0,0,59,184,1,0,0,0,61,189,1,0,0,0,63,194,1,0,0,0,65,200,1,0,0,0,67,
		204,1,0,0,0,69,208,1,0,0,0,71,212,1,0,0,0,73,216,1,0,0,0,75,220,1,0,0,
		0,77,223,1,0,0,0,79,227,1,0,0,0,81,230,1,0,0,0,83,233,1,0,0,0,85,237,1,
		0,0,0,87,241,1,0,0,0,89,245,1,0,0,0,91,249,1,0,0,0,93,252,1,0,0,0,95,258,
		1,0,0,0,97,263,1,0,0,0,99,269,1,0,0,0,101,276,1,0,0,0,103,282,1,0,0,0,
		105,288,1,0,0,0,107,293,1,0,0,0,109,299,1,0,0,0,111,306,1,0,0,0,113,313,
		1,0,0,0,115,323,1,0,0,0,117,334,1,0,0,0,119,120,7,0,0,0,120,2,1,0,0,0,
		121,122,7,1,0,0,122,4,1,0,0,0,123,124,7,2,0,0,124,6,1,0,0,0,125,126,7,
		3,0,0,126,8,1,0,0,0,127,128,7,4,0,0,128,10,1,0,0,0,129,130,7,5,0,0,130,
		12,1,0,0,0,131,132,7,6,0,0,132,14,1,0,0,0,133,134,7,7,0,0,134,16,1,0,0,
		0,135,136,7,8,0,0,136,18,1,0,0,0,137,138,7,9,0,0,138,20,1,0,0,0,139,140,
		7,10,0,0,140,22,1,0,0,0,141,142,7,11,0,0,142,24,1,0,0,0,143,144,7,12,0,
		0,144,26,1,0,0,0,145,146,7,13,0,0,146,28,1,0,0,0,147,148,7,14,0,0,148,
		30,1,0,0,0,149,150,7,15,0,0,150,32,1,0,0,0,151,152,7,16,0,0,152,34,1,0,
		0,0,153,154,7,17,0,0,154,36,1,0,0,0,155,156,7,18,0,0,156,38,1,0,0,0,157,
		158,7,19,0,0,158,40,1,0,0,0,159,160,7,20,0,0,160,42,1,0,0,0,161,162,7,
		21,0,0,162,44,1,0,0,0,163,164,7,22,0,0,164,46,1,0,0,0,165,166,7,23,0,0,
		166,48,1,0,0,0,167,168,7,24,0,0,168,50,1,0,0,0,169,170,7,25,0,0,170,52,
		1,0,0,0,171,172,3,31,15,0,172,173,3,41,20,0,173,174,3,37,18,0,174,175,
		3,15,7,0,175,54,1,0,0,0,176,177,3,31,15,0,177,178,3,29,14,0,178,179,3,
		31,15,0,179,56,1,0,0,0,180,181,3,7,3,0,181,182,3,41,20,0,182,183,3,31,
		15,0,183,58,1,0,0,0,184,185,3,37,18,0,185,186,3,45,22,0,186,187,3,1,0,
		0,187,188,3,31,15,0,188,60,1,0,0,0,189,190,3,23,11,0,190,191,3,29,14,0,
		191,192,3,1,0,0,192,193,3,7,3,0,193,62,1,0,0,0,194,195,3,37,18,0,195,196,
		3,39,19,0,196,197,3,29,14,0,197,198,3,35,17,0,198,199,3,9,4,0,199,64,1,
		0,0,0,200,201,3,1,0,0,201,202,3,7,3,0,202,203,3,7,3,0,203,66,1,0,0,0,204,
		205,3,37,18,0,205,206,3,41,20,0,206,207,3,3,1,0,207,68,1,0,0,0,208,209,
		3,25,12,0,209,210,3,41,20,0,210,211,3,23,11,0,211,70,1,0,0,0,212,213,3,
		7,3,0,213,214,3,17,8,0,214,215,3,43,21,0,215,72,1,0,0,0,216,217,3,25,12,
		0,217,218,3,29,14,0,218,219,3,7,3,0,219,74,1,0,0,0,220,221,3,9,4,0,221,
		222,3,33,16,0,222,76,1,0,0,0,223,224,3,27,13,0,224,225,3,9,4,0,225,226,
		3,33,16,0,226,78,1,0,0,0,227,228,3,23,11,0,228,229,3,39,19,0,229,80,1,
		0,0,0,230,231,3,13,6,0,231,232,3,39,19,0,232,82,1,0,0,0,233,234,3,23,11,
		0,234,235,3,39,19,0,235,236,3,9,4,0,236,84,1,0,0,0,237,238,3,13,6,0,238,
		239,3,39,19,0,239,240,3,9,4,0,240,86,1,0,0,0,241,242,3,27,13,0,242,243,
		3,29,14,0,243,244,3,39,19,0,244,88,1,0,0,0,245,246,3,1,0,0,246,247,3,27,
		13,0,247,248,3,7,3,0,248,90,1,0,0,0,249,250,3,29,14,0,250,251,3,35,17,
		0,251,92,1,0,0,0,252,253,3,23,11,0,253,254,3,1,0,0,254,255,3,3,1,0,255,
		256,3,9,4,0,256,257,3,23,11,0,257,94,1,0,0,0,258,259,3,19,9,0,259,260,
		3,41,20,0,260,261,3,25,12,0,261,262,3,31,15,0,262,96,1,0,0,0,263,264,3,
		19,9,0,264,265,3,41,20,0,265,266,3,25,12,0,266,267,3,31,15,0,267,268,3,
		51,25,0,268,98,1,0,0,0,269,270,3,19,9,0,270,271,3,41,20,0,271,272,3,25,
		12,0,272,273,3,31,15,0,273,274,3,27,13,0,274,275,3,51,25,0,275,100,1,0,
		0,0,276,277,3,17,8,0,277,278,3,27,13,0,278,279,3,31,15,0,279,280,3,41,
		20,0,280,281,3,39,19,0,281,102,1,0,0,0,282,283,3,31,15,0,283,284,3,35,
		17,0,284,285,3,17,8,0,285,286,3,27,13,0,286,287,3,39,19,0,287,104,1,0,
		0,0,288,289,3,31,15,0,289,290,3,41,20,0,290,291,3,39,19,0,291,292,3,5,
		2,0,292,106,1,0,0,0,293,294,3,15,7,0,294,295,3,1,0,0,295,296,3,23,11,0,
		296,297,3,39,19,0,297,108,1,0,0,0,298,300,5,45,0,0,299,298,1,0,0,0,299,
		300,1,0,0,0,300,302,1,0,0,0,301,303,7,26,0,0,302,301,1,0,0,0,303,304,1,
		0,0,0,304,302,1,0,0,0,304,305,1,0,0,0,305,110,1,0,0,0,306,310,7,27,0,0,
		307,309,7,28,0,0,308,307,1,0,0,0,309,312,1,0,0,0,310,308,1,0,0,0,310,311,
		1,0,0,0,311,112,1,0,0,0,312,310,1,0,0,0,313,317,5,35,0,0,314,316,8,29,
		0,0,315,314,1,0,0,0,316,319,1,0,0,0,317,315,1,0,0,0,317,318,1,0,0,0,318,
		320,1,0,0,0,319,317,1,0,0,0,320,321,6,56,0,0,321,114,1,0,0,0,322,324,7,
		30,0,0,323,322,1,0,0,0,324,325,1,0,0,0,325,323,1,0,0,0,325,326,1,0,0,0,
		326,327,1,0,0,0,327,328,6,57,0,0,328,116,1,0,0,0,329,331,5,13,0,0,330,
		332,5,10,0,0,331,330,1,0,0,0,331,332,1,0,0,0,332,335,1,0,0,0,333,335,5,
		10,0,0,334,329,1,0,0,0,334,333,1,0,0,0,335,118,1,0,0,0,8,0,299,304,310,
		317,325,331,334,1,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
