//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Lukas/Projects/FirstLanguage/FirstLanguage/grammar/EduLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="EduLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IEduLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] EduLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] EduLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] EduLangParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] EduLangParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] EduLangParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] EduLangParser.InstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.push_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPush_instr([NotNull] EduLangParser.Push_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.push_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPush_instr([NotNull] EduLangParser.Push_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.pop_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPop_instr([NotNull] EduLangParser.Pop_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.pop_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPop_instr([NotNull] EduLangParser.Pop_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.dup_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDup_instr([NotNull] EduLangParser.Dup_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.dup_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDup_instr([NotNull] EduLangParser.Dup_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.swap_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwap_instr([NotNull] EduLangParser.Swap_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.swap_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwap_instr([NotNull] EduLangParser.Swap_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.load_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoad_instr([NotNull] EduLangParser.Load_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.load_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoad_instr([NotNull] EduLangParser.Load_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.store_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStore_instr([NotNull] EduLangParser.Store_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.store_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStore_instr([NotNull] EduLangParser.Store_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.add_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_instr([NotNull] EduLangParser.Add_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.add_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_instr([NotNull] EduLangParser.Add_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.sub_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub_instr([NotNull] EduLangParser.Sub_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.sub_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub_instr([NotNull] EduLangParser.Sub_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.mul_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMul_instr([NotNull] EduLangParser.Mul_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.mul_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMul_instr([NotNull] EduLangParser.Mul_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.div_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiv_instr([NotNull] EduLangParser.Div_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.div_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiv_instr([NotNull] EduLangParser.Div_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.mod_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMod_instr([NotNull] EduLangParser.Mod_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.mod_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMod_instr([NotNull] EduLangParser.Mod_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.eq_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEq_instr([NotNull] EduLangParser.Eq_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.eq_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEq_instr([NotNull] EduLangParser.Eq_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.neq_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNeq_instr([NotNull] EduLangParser.Neq_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.neq_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNeq_instr([NotNull] EduLangParser.Neq_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.lt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLt_instr([NotNull] EduLangParser.Lt_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.lt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLt_instr([NotNull] EduLangParser.Lt_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.gt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGt_instr([NotNull] EduLangParser.Gt_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.gt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGt_instr([NotNull] EduLangParser.Gt_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.lte_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLte_instr([NotNull] EduLangParser.Lte_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.lte_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLte_instr([NotNull] EduLangParser.Lte_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.gte_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGte_instr([NotNull] EduLangParser.Gte_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.gte_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGte_instr([NotNull] EduLangParser.Gte_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.not_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot_instr([NotNull] EduLangParser.Not_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.not_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot_instr([NotNull] EduLangParser.Not_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.and_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_instr([NotNull] EduLangParser.And_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.and_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_instr([NotNull] EduLangParser.And_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.or_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_instr([NotNull] EduLangParser.Or_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.or_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_instr([NotNull] EduLangParser.Or_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.label_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_instr([NotNull] EduLangParser.Label_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.label_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_instr([NotNull] EduLangParser.Label_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.jump_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJump_instr([NotNull] EduLangParser.Jump_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.jump_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJump_instr([NotNull] EduLangParser.Jump_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.jumpz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpz_instr([NotNull] EduLangParser.Jumpz_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.jumpz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpz_instr([NotNull] EduLangParser.Jumpz_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.jumpnz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpnz_instr([NotNull] EduLangParser.Jumpnz_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.jumpnz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpnz_instr([NotNull] EduLangParser.Jumpnz_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.input_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInput_instr([NotNull] EduLangParser.Input_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.input_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInput_instr([NotNull] EduLangParser.Input_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.print_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_instr([NotNull] EduLangParser.Print_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.print_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_instr([NotNull] EduLangParser.Print_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.putc_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPutc_instr([NotNull] EduLangParser.Putc_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.putc_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPutc_instr([NotNull] EduLangParser.Putc_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.halt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHalt_instr([NotNull] EduLangParser.Halt_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.halt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHalt_instr([NotNull] EduLangParser.Halt_instrContext context);
}
