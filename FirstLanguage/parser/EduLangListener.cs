//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from E:/Lukas/Projects/FirstLanguage/FirstLanguage/grammar/EduLang.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="EduLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IEduLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] EduLangParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] EduLangParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] EduLangParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] EduLangParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.macro"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacro([NotNull] EduLangParser.MacroContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.macro"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacro([NotNull] EduLangParser.MacroContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruction([NotNull] EduLangParser.InstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.instruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruction([NotNull] EduLangParser.InstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.push_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPush_instr([NotNull] EduLangParser.Push_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.push_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPush_instr([NotNull] EduLangParser.Push_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.pop_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPop_instr([NotNull] EduLangParser.Pop_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.pop_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPop_instr([NotNull] EduLangParser.Pop_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.load_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoad_instr([NotNull] EduLangParser.Load_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.load_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoad_instr([NotNull] EduLangParser.Load_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.store_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStore_instr([NotNull] EduLangParser.Store_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.store_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStore_instr([NotNull] EduLangParser.Store_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.add_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_instr([NotNull] EduLangParser.Add_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.add_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_instr([NotNull] EduLangParser.Add_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.sub_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSub_instr([NotNull] EduLangParser.Sub_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.sub_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSub_instr([NotNull] EduLangParser.Sub_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.label_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel_instr([NotNull] EduLangParser.Label_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.label_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel_instr([NotNull] EduLangParser.Label_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.jumpz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpz_instr([NotNull] EduLangParser.Jumpz_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.jumpz_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpz_instr([NotNull] EduLangParser.Jumpz_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.print_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint_instr([NotNull] EduLangParser.Print_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.print_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint_instr([NotNull] EduLangParser.Print_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.halt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHalt_instr([NotNull] EduLangParser.Halt_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.halt_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHalt_instr([NotNull] EduLangParser.Halt_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.macro_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacro_instr([NotNull] EduLangParser.Macro_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.macro_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacro_instr([NotNull] EduLangParser.Macro_instrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="EduLangParser.macro_end_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMacro_end_instr([NotNull] EduLangParser.Macro_end_instrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="EduLangParser.macro_end_instr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMacro_end_instr([NotNull] EduLangParser.Macro_end_instrContext context);
}
